# This is a basic workflow to help you get started with Actions

name: Build OpenWrt

# 控制工作流何时运行
on:
  # 允许您从“操作”选项卡手动运行此工作流
  workflow_dispatch:
    inputs:
      REPO_BRANCH:
        description: '源码分支'
        required: true
        default: 'master'
        type: choice
        options:
          - 'master'
      CONFIG_FILE:
        description: '请选择配置文件'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'x86_64'
      SSH_ACTION:
        description: 'SSH远程配置固件'
        required: false
        default: false
        type: boolean
      UPLOAD_FIRMWARE:
        description: '上传固件到 Github Artifacts'
        required: false
        default: true
        type: boolean
      UPLOAD_RELEASE:
        description: '发布固件到 Github Releases'
        required: false
        default: false
        type: boolean
      CACHEWRTBUILD_SWITCH:
        description: '缓存加速编译'
        required: false
        default: true
        type: boolean
      COMPILATION_INFORMATION:
        description: '是否显示编译信息'
        required: false
        default: true
        type: boolean

env:
  # 源码仓库地址
  REPO_URL: https://github.com/coolsnowwolf/lede
  # 自定义feeds.conf.default文件名
  FEEDS_CONF: 
  # 自定义.config文件名
  CONFIGS: 
  # 自定义diy-part1.sh文件名
  DIY_P1_SH: 
  # 自定义diy-part1.sh文件名
  DIY_P2_SH: 
  # 上传 bin 目录。即包含所有 ipk 文件和固件的目录。默认false
  UPLOAD_BIN_DIR: false
  # 时区设置
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

# 工作流运行由一个或多个作业组成，这些作业可以按顺序或并行运行
jobs:
  # 此工作流包含一个名为“构建”的作业
  build:
    # 作业将在其上运行的运行程序的类型
    runs-on: ubuntu-latest
    name: 启动openwrt"-${{ github.event.inputs.REPO_BRANCH }}"编译

    # 步骤表示将作为作业的一部分执行的一系列任务
    steps:
    # 在$GITHUB_WORKSPACE下签出您的存储库,以便您的工作可以访问它
    - name: 准备结束
      uses: actions/checkout@v4

    - name: 释放Ubuntu磁盘空间
      uses: endersonmenezes/free-disk-space@v2
      with:
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
        remove_packages_one_command: true
        remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
        testing: false

    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        source ${GITHUB_WORKSPACE}/build/openwrt/common.sh && Diy_update
        echo "------------------------------- 设置工作目录及时区 -------------------------------"
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b ${{ github.event.inputs.REPO_BRANCH }} openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        git clone -b main --depth 1 https://github.com/asxs123/ceshi build/common
        cp -Rf /workdir/build ${GITHUB_WORKSPACE}/openwrt/build
        chmod -R +x ${GITHUB_WORKSPACE}/openwrt/build

    - name: 加载自定义 feeds
      run: |
        [ -e $FEEDS_CONF ] && cp -r $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新 feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装 feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE_PATH ] && mv $CONFIG_FILE_PATH openwrt/$CONFIG_FILE
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSH 连接到 Actions
      if: github.event.inputs.SSH_ACTION == 'true'
      uses: P3TERX/ssh2actions@v1.0.0

    - name: 缓存加速
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: "openwrt_x86"
        prefix: ${{ github.workspace }}/openwrt

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;